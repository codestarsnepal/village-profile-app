{"version":3,"sources":["Components/Home.tsx","db/db.ts","db/models/BastiModel.ts","db/models/Household.ts","db/models/UserModel.ts","db/models/WardModel.ts","Components/VillageProfile/Forms/GharKoBiabarn.tsx","Components/VillageProfile/AddNewData.tsx","Api/api.ts","Components/VillageProfile/PendingData.tsx","db/seed.ts","Components/VillageProfileHome.tsx","Components/VillageProfile/AllData.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Home","className","to","db","users","wards","bastis","households","version","stores","open","then","a","console","log","catch","err","Dexie","Basti","name","status","wardId","id","this","mapToClass","put","addNewBasti","data","transaction","add","getBastiByName","where","startsWithAnyOfIgnoreCase","toArray","getBastiByWardId","parseInt","Household","hoh_name","hoh","ward_id","basti_id","marga_id","religion","jaati","mother_tongue","main_occupation","has_bank_acc","has_cooperative_acc","has_garden","member_with_life_insurance","member_with_health_insurance","responder_name","house_num","num_of_member","resident_type","phone_num","mobile_num","longitude","latitude","geo_location","altitude","accuracy","responder_image","step","remarks","user_id","is_posted","addNewHousehold","getAllHousehold","getPendingHouseholds","equals","updateHousehold","User","username","phone","password","office_name","office_id","addNewUser","user","getAllUsers","clear","Ward","addNewWard","ward","getAllWards","getWardByName","GharKoBiabarn","props","household","handleChange","checkRequired","requiredFields","indexOf","onChange","e","map","w","key","type","value","defaultChecked","b","AddNewData","history","useHistory","useState","auth","setAuth","setWards","setBastis","setHousehold","useEffect","checkUser","loadAllWada","length","saveHousehold","toString","push","loadBastiByWadaId","target","onClick","axios","defaults","xsrfHeaderName","xsrfCookieName","server","process","api","loadCollectors","get","loadWada","params","loadMarga","loadBasti","login","post","postHousehold","AllData","setHousholds","getHouseholds","hhs","hh","window","navigator","onLine","alert","getWadas","res","getBastis","basti","syncDb","initialAuth","VillageProfileHome","loading","setLoading","error","setError","handleValueChance","persist","handleSubmit","preventDefault","deleteUser","method","onSubmit","placeholder","required","style","color","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8ca7a339.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <div>\n        <div className=\"title\">\n          <h3>खाँडादेवी गाउँपालिका</h3>\n          <p>माकादुम , रामेछाप, प्रदेश नं ३</p>\n        </div>\n        <Link to=\"/village-profile-app/app\">Village Profile App</Link>\n      </div>\n    </div>\n  );\n}\n","import Dexie from \"dexie\";\nimport { IBasti } from \"./models/BastiModel\";\nimport { IHousehold } from \"./models/Household\";\nimport { IUser } from \"./models/UserModel\";\nimport { IWard } from \"./models/WardModel\";\nimport { syncDb } from \"./seed\";\n\nexport class AppDatabase extends Dexie {\n  users: Dexie.Table<IUser>;\n  wards: Dexie.Table<IWard>;\n  bastis: Dexie.Table<IBasti>;\n  households: Dexie.Table<IHousehold>;\n\n  constructor() {\n    super(\"VPDB\");\n\n    var db = this;\n    // db.delete()\n    //   .then(() => {\n    //     console.log(\"Database successfully deleted\");\n    //   })\n    //   .catch((err) => {\n    //     console.error(\"Could not delete database\");\n    //   })\n    //   .finally(() => {\n    //     // Do what should be done next...\n    //   });\n    db.version(1).stores({\n      users: \"++id, name, phone, password\",\n      wards: \"id, name, status\",\n      bastis: \"id, name, status, wardId\",\n      households: \"++id, name, phone, password, [user_id+is_posted]\",\n    });\n    db.open()\n      .then(async function (db) {\n        console.log(\"DB opened Succefully\");\n        console.log(\"Sync Complete\");\n      })\n      .catch(function (err) {\n        console.log(\"DB error\", err);\n      });\n  }\n}\nexport var db = new AppDatabase();\n","import { db } from \"../db\";\n\nexport interface IBasti {\n  id?: number;\n  name: string;\n  status: number;\n  wardId: number;\n}\nexport class Basti {\n  id: number;\n  name: string;\n  status: number;\n  wardId: number;\n\n  constructor(name: string, status: number, wardId: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    this.wardId = wardId;\n    if (id) this.id = id;\n    db.bastis.mapToClass(Basti);\n  }\n  save() {\n    return db.bastis.put(this);\n  }\n}\n\nexport async function addNewBasti(data: IBasti) {\n  await db.transaction(\"rw\", db.bastis, async function () {\n    await db.bastis.add(\n      new Basti(data.name, data.status, data.wardId, data.id)\n    );\n  });\n}\n\nexport async function getAllBasti() {\n  return await db.transaction(\"r\", db.bastis, async function () {\n    let bastis = await db.bastis.toArray();\n    return bastis;\n  });\n}\n\nexport async function getBastiById(id: number) {\n  return await db.bastis.get(id);\n}\n\nexport async function getBastiByName(name: string) {\n  return await db.bastis.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function getBastiByWardId(wardId: any) {\n  return await db.bastis.where({wardId: parseInt(wardId)}).toArray();\n}\n\nexport async function updateBasti(data: IBasti) {\n  return await db.bastis.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n    wardId: data.wardId,\n  });\n}\n","import { db } from \"../db\";\n\nexport interface IHousehold {\n  id?: number;\n  id_string?: String;\n  hoh_name?: String;\n  hoh?: String;\n  province?: String;\n  district?: String;\n  local_level?: String;\n  ward_id?: String;\n  basti_id?: String;\n  marga_id?: String;\n  religion?: String;\n  jaati?: String;\n  mother_tongue?: String;\n  main_occupation?: String;\n  has_bank_acc?: String;\n  has_cooperative_acc?: String;\n  has_garden?: String;\n  member_with_life_insurance?: String;\n  member_with_health_insurance?: String;\n  responder_name?: String;\n  house_num?: String;\n  num_of_member?: String;\n  resident_type?: String;\n  phone_num?: String;\n  mobile_num?: String;\n  longitude?: String;\n  latitude?: String;\n  geo_location?: String;\n  altitude?: String;\n  accuracy?: String;\n  responder_image?: String;\n  step?: String;\n  status?: String;\n  remarks?: String;\n  office?: String;\n  user_id?: String;\n  is_posted?: String;\n}\nexport class Household {\n  id: number;\n  hoh_name?: String;\n  hoh?: String;\n  ward_id?: String;\n  basti_id?: String;\n  marga_id?: String;\n  religion?: String;\n  jaati?: String;\n  mother_tongue?: String;\n  main_occupation?: String;\n  has_bank_acc?: String;\n  has_cooperative_acc?: String;\n  has_garden?: String;\n  member_with_life_insurance?: String;\n  member_with_health_insurance?: String;\n  responder_name?: String;\n  house_num?: String;\n  num_of_member?: String;\n  resident_type?: String;\n  phone_num?: String;\n  mobile_num?: String;\n  longitude?: String;\n  latitude?: String;\n  geo_location?: String;\n  altitude?: String;\n  accuracy?: String;\n  responder_image?: String;\n  step?: String;\n  status?: String;\n  remarks?: String;\n  user_id?: String;\n  is_posted?: String;\n\n  constructor(data: IHousehold) {\n    this.hoh_name = data.hoh_name;\n    this.hoh = data.hoh;\n    this.ward_id = data.ward_id;\n    this.basti_id = data.basti_id;\n    this.marga_id = data.marga_id;\n    this.religion = data.religion;\n    this.jaati = data.jaati;\n    this.mother_tongue = data.mother_tongue;\n    this.main_occupation = data.main_occupation;\n    this.has_bank_acc = data.has_bank_acc;\n    this.has_cooperative_acc = data.has_cooperative_acc;\n    this.has_garden = data.has_garden;\n    this.member_with_life_insurance = data.member_with_life_insurance;\n    this.member_with_health_insurance = data.member_with_health_insurance;\n    this.responder_name = data.responder_name;\n    this.house_num = data.house_num;\n    this.num_of_member = data.num_of_member;\n    this.resident_type = data.resident_type;\n    this.phone_num = data.phone_num;\n    this.mobile_num = data.mobile_num;\n    this.longitude = data.longitude;\n    this.latitude = data.latitude;\n    this.geo_location = data.geo_location;\n    this.altitude = data.altitude;\n    this.accuracy = data.accuracy;\n    this.responder_image = data.responder_image;\n    this.step = data.step;\n    this.status = data.status;\n    this.remarks = data.remarks;\n    this.user_id = data.user_id;\n    this.is_posted = data.is_posted;\n    db.households.mapToClass(Household);\n  }\n  save() {\n    return db.households.put(this);\n  }\n}\n\nexport async function addNewHousehold(data: IHousehold) {\n  await db.transaction(\"rw\", db.households, async function () {\n    await db.households.add(\n      new Household({...data})\n    );\n  });\n}\n\nexport async function getAllHousehold() {\n  return await db.transaction(\"r\", db.households, async function () {\n    let households = await db.households.toArray();\n    return households;\n  });\n}\n\nexport async function getHouseholdById(id: number) {\n  return await db.households.get(id);\n}\n\nexport async function getPendingHouseholds(user_id: string) {\n  return await db.households\n    .where(\"[user_id+is_posted]\").equals([user_id,\"0\"]).toArray();\n}\n\nexport async function updateHousehold(data: IHousehold) {\n  return await db.households.put({...data});\n}\n","import { db } from \"../db\";\nimport { IHousehold } from \"./Household\";\n\nexport interface IUser {\n  id?: number;\n  name: string;\n  username: string;\n  office_name: string;\n  office_id: string;\n  phone: string;\n  password: string;\n}\nexport class User {\n  id: number;\n  name: string;\n  username: string;\n  phone: string;\n  password: string;\n  office_name: string;\n  office_id: string;\n\n  constructor(data: IUser) {\n    this.name = data.name;\n    this.username = data.username;\n    this.phone = data.phone;\n    this.password = data.password;\n    this.office_name = data.office_name;\n    this.office_id = data.office_id;\n    if (data.id) this.id = data.id;\n    db.users.mapToClass(User);\n  }\n  save() {\n    return db.users.put(this);\n  }\n}\n\nexport async function addNewUser(data: IUser) {\n  await db.transaction(\"rw\", db.users, async function () {\n    let user = await db.users.add(\n      new User({...data})\n    );\n    console.log(user);\n  });\n}\n\nexport async function getAllUsers() {\n  return await db.transaction(\"r\", db.users, async function () {\n    let users = await db.users.toArray();\n    return users;\n  });\n}\n\nexport async function getUserById(id: number) {\n  return await db.users.get(id);\n}\n\nexport async function updateUser(data: IUser) {\n  return await db.users.put({...data});\n}\n\nexport async function deleteUser() {\n  return await db.users.clear();\n}\n","import { db } from \"../db\";\n\nexport interface IWard {\n  id?: number;\n  name: string;\n  status: number;\n}\nexport class Ward {\n  id: number;\n  name: string;\n  status: number;\n\n  constructor(name: string, status: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    if (id) this.id = id;\n    db.wards.mapToClass(Ward);\n  }\n  save() {\n    return db.wards.put(this);\n  }\n}\n\nexport async function addNewWard(data: IWard) {\n  await db.transaction(\"rw\", db.wards, async function () {\n    let ward = await db.wards.add(\n      new Ward(data.name, data.status, data.id)\n    );\n    console.log(ward);\n  });\n}\n\nexport async function getAllWards() {\n  return await db.transaction(\"r\", db.wards, async function () {\n    let wards = await db.wards.toArray();\n    return wards;\n  });\n}\n\nexport async function getWardById(id: number) {\n  return await db.wards.get(id);\n}\n\nexport async function getWardByName(name: string) {\n  return await db.wards.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function updateWard(data: IWard) {\n  return await db.wards.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n  });\n}\n","import { IBasti } from \"../../../db/models/BastiModel\";\nimport { IWard } from \"../../../db/models/WardModel\";\n\nexport default function GharKoBiabarn(props: any) {\n  let { data, bastis, wards, household } = props;\n  let { handleChange } = props;\n\n  const checkRequired = (id: number) => {\n    let requiredFields = data?.requiredFields || [];\n    return requiredFields.indexOf(id) > -1;\n  };\n  return (\n    <div className=\"vp-form\">\n      <div\n        className={`form-group ${data && checkRequired(1) ? \"required\" : \"\"}`}\n        id=\"1\"\n      >\n        <label className=\"label\">1. Ward No</label>\n        <div className=\"options-verical\" onChange={(e) => handleChange(e)}>\n          {wards.map((w: IWard, key: any) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                {household.ward_id == w.id ? (\n                  <input type=\"radio\" value={w.id} name=\"ward_id\" defaultChecked/>\n                ) : (\n                  <input type=\"radio\" value={w.id} name=\"ward_id\" />\n                )}\n                {w.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div\n        className={`form-group ${data && checkRequired(2) ? \"required\" : \"\"}`}\n        id=\"2\"\n      >\n        <label className=\"label\">2. Basti ko Naam</label>\n        <div className=\"options-verical\" onChange={(e) => handleChange(e)}>\n          {bastis.map((b: IBasti, key: any) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                <input type=\"radio\" value={b.id} name=\"basti_id\" />\n                {b.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { getBastiByWardId, IBasti } from \"../../db/models/BastiModel\";\nimport {\n  addNewHousehold,\n  getAllHousehold,\n  IHousehold,\n} from \"../../db/models/Household\";\nimport { getAllUsers, IUser } from \"../../db/models/UserModel\";\nimport { getAllWards, IWard } from \"../../db/models/WardModel\";\nimport GharKoBiabarn from \"./Forms/GharKoBiabarn\";\nconst requiredFields = [1, 2];\n\nexport default function AddNewData(props: any) {\n  // To edit send data.household\n  const history = useHistory();\n  let { data } = props;\n  const [auth, setAuth] = useState({} as IUser)\n  const [wards, setWards] = useState([] as IWard[]);\n  const [bastis, setBastis] = useState([] as IBasti[]);\n  const [household, setHousehold] = useState({\n    ...data.household,\n  } as IHousehold);\n  data.requiredFields = requiredFields;\n  useEffect(() => {\n    checkUser();\n    loadAllWada();\n  }, []);\n\n  const checkUser = async () => {\n    let auth = await getAllUsers()\n    if (auth.length) {\n      setAuth({ ...auth[0] });\n    }\n  };\n\n  async function loadAllWada() {\n    let wards = await getAllWards();\n    setWards([...wards]);\n  }\n\n  const saveHousehold = async () => {\n    await addNewHousehold({\n      ...household,\n      status: \"0\",\n      is_posted: \"0\",\n      user_id: auth.id?.toString(),\n    });\n    history.push(\"/village-profile-app/app\");\n  };\n\n  const loadBastiByWadaId = async (e: any) => {\n    let wardId = e.target.value;\n    let bastis = await getBastiByWardId(wardId);\n    setBastis([...bastis]);\n  };\n\n  const handleChange = (e: any) => {\n    if (e.target.name === \"ward_id\") {\n      loadBastiByWadaId(e);\n    }\n    setHousehold((household) => ({\n      ...household,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  return (\n    <div className=\"vp-form-wrapper\">\n      <div className=\"save-btns\">\n        <button onClick={saveHousehold}>Save</button>\n        <button>Save & Exit</button>\n      </div>\n      <GharKoBiabarn\n        data={data}\n        household={household}\n        handleChange={handleChange}\n        wards={wards}\n        bastis={bastis}\n      />\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { IUser } from \"../db/models/UserModel\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\nconst server = `${process.env.REACT_APP_SERVER}/api/`;\nconst api = {\n  loadCollectors: () => axios.get(`${server}collectors/`),\n  loadWada: (office_id: String) => axios.get(`${server}wards/`, {params: {office_id: office_id}}),\n  loadMarga: (office_id: String) => axios.get(`${server}margas/`, {params: {office_id: office_id}}),\n  loadBasti: (office_id: String) => axios.get(`${server}bastis/`, {params: {office_id: office_id}}),\n  login: (auth: IUser) => axios.post(`${server}login/`, { data: auth }),\n  \n  postHousehold: (data: any) => axios.post(`${server}post-household/`, { data }),\n};\n\nexport default api;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../Api/api\";\nimport {\n  getPendingHouseholds,\n  IHousehold,\n  updateHousehold,\n} from \"../../db/models/Household\";\nimport { getAllUsers, IUser } from \"../../db/models/UserModel\";\n\nexport default function AllData() {\n  const [households, setHousholds] = useState([] as IHousehold[]);\n  const [auth, setAuth] = useState({} as IUser);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    checkUser();\n    getHouseholds();\n  }, []);\n\n  const getHouseholds = async () => {\n    let hhs = await getPendingHouseholds(auth.id ? auth.id.toString() : \"\");\n    setHousholds([...hhs]);\n  };\n\n  const postHousehold = async (hh: any) => {\n    if (window.navigator.onLine) {\n      let res = await api.postHousehold(hh);\n      if (res.status === 200) {\n        await updateHousehold({ ...hh, is_posted: 1 });\n      } else {\n        console.log(hh.id, \"Failed\");\n      }\n      getHouseholds();\n    } else {\n      alert(\"Please connect to WIFI!\");\n    }\n  };\n\n  const checkUser = async () => {\n    let auth = await getAllUsers();\n    if (auth.length) {\n      setAuth({ ...auth[0] });\n    }\n  };\n  return (\n    <div>\n      <button\n        className=\"btn btn-warning\"\n        onClick={() => history.push(\"/village-profile-app/app\")}\n      >\n        Back\n      </button>\n      <table className=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Household Id</th>\n            <th>Ward</th>\n            <th>Posted</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {households.length ? (\n            households.map((hh, key) => (\n              <tr key={key}>\n                <td>{++key}</td>\n                <td>{hh.id}</td>\n                <td>{hh.ward_id}</td>\n                <td>\n                  {hh.is_posted == \"1\" ? (\n                    <label className=\"badge badge-success\">YES</label>\n                  ) : (\n                    <label className=\"badge badge-danger\">NO</label>\n                  )}\n                </td>\n                <td>\n                  {hh.is_posted == \"0\" && (\n                    <>\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Post\n                      </button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td>No Data</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import api from \"../Api/api\";\nimport { addNewBasti, getBastiByName } from \"./models/BastiModel\";\nimport { addNewWard, getWardByName } from \"./models/WardModel\";\n\nexport async function getWadas(office_id: String) {\n  console.log(\"Synchronizing Wards...\");\n  let res = await api.loadWada(office_id);\n  if (res.status === 200) {\n    let wards = res.data;\n    wards.map(async (w: any) => {\n      let checkWard = await getWardByName(w.name);\n      if (checkWard.length === 0) {\n        await addNewWard({ name: w.name, status: w.status, id: w.id });\n      }\n    });\n    console.log(wards.length, \" Wards Synced.\");\n    return wards;\n  }\n  return null;\n}\n\nexport async function getBastis(office_id: String) {\n  console.log(\"Synchronizing Basti...\");\n  let res = await api.loadBasti(office_id);\n    if (res.status === 200) {\n      let basti = res.data;\n      basti.map(async (w: any) => {\n        let checkWard = await getBastiByName(w.name);\n        if (checkWard.length === 0) {\n          await addNewBasti({ name: w.name, status: w.status, id: w.id, wardId: w.ward_id });\n        }\n      });\n      console.log(basti.length , \" Bastis Synced.\")\n    }\n}\n\nexport async function syncDb(data: any) {\n  if (window.navigator.onLine) {\n    await getWadas(data.office_id);\n    await getBastis(data.office_id);\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { addNewUser, deleteUser, getAllUsers, IUser } from \"../db/models/UserModel\";\nimport api from \"../Api/api\";\nimport { syncDb } from \"../db/seed\";\n\nconst initialAuth = {\n  name: \"\",\n  username: \"\",\n  phone: \"\",\n  password: \"\",\n  office_name: \"\",\n  office_id: \"\",\n} as IUser;\nexport default function VillageProfileHome() {\n  const [auth, setAuth] = useState(initialAuth as IUser);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  const handleValueChance = (e: any) => {\n    e.persist();\n    setAuth((auth) => ({\n      ...auth,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    let res = await api.login(auth);\n    if (res.data) {\n      let data = res.data;\n      await addNewUser(data)\n      await syncDb(data)\n      setAuth({ ...data });\n    } else {\n      setError(\"Phone or Password did not match!\");\n    }\n    setLoading(false);\n  };\n\n  const checkUser = async () => {\n    let auth = await getAllUsers()\n    console.log(auth);\n    if (auth.length) {\n      setAuth({ ...auth[0] });\n    }\n  };\n\n  const logout = () => {\n    setAuth({ ...initialAuth });\n    deleteUser();\n  };\n\n  if (loading) {\n    return <div className=\"vp-home\">Loading...</div>;\n  }\n  if (!auth.id) {\n    return (\n      <div className=\"vp-home\">\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              type=\"username\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={auth?.username}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={auth?.password}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <p style={{ color: \"red\" }}>{error}</p>\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n  return (\n    <div className=\"vp-home\">\n      <div className=\"welcome\">\n        Welcome <br />\n        {auth?.name}\n        <p className=\"logout\" onClick={logout}>\n          Logout\n        </p>\n      </div>\n      <Link to=\"/village-profile-app/app/add-new\">Add New Household</Link>\n      <Link to=\"/village-profile-app/app/pending\">Pending Data</Link>\n      <Link to=\"/village-profile-app/app/incomplete\">Incomplete Data</Link>\n      <Link to=\"/village-profile-app/app/all\">All Data</Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../Api/api\";\nimport {\n  getAllHousehold,\n  IHousehold,\n  updateHousehold,\n} from \"../../db/models/Household\";\n\nexport default function AllData() {\n  const [households, setHousholds] = useState([] as IHousehold[]);\n  const history = useHistory();\n\n  useEffect(() => {\n    getHouseholds();\n  }, []);\n\n  const getHouseholds = async () => {\n    let hhs = await getAllHousehold();\n    console.log(hhs);\n    setHousholds([...hhs]);\n  };\n\n  const postHousehold = async (hh: any) => {\n    if (window.navigator.onLine) {\n      let res = await api.postHousehold(hh);\n      if (res.status === 200) {\n        await updateHousehold({ ...hh, is_posted: 1 });\n      } else {\n        console.log(hh.id, \"Failed\");\n      }\n      getHouseholds();\n    } else {\n      alert(\"Please connect to WIFI!\");\n    }\n  };\n  return (\n    <div>\n      <button\n        className=\"btn btn-warning\"\n        onClick={() => history.push(\"/village-profile-app/app\")}\n      >\n        Back\n      </button>\n      <table className=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Household Id</th>\n            <th>Ward</th>\n            <th>Posted</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {households.length ? (\n            households.map((hh, key) => (\n              <tr key={key}>\n                <td>{++key}</td>\n                <td>{hh.id}</td>\n                <td>{hh.ward_id}</td>\n                <td>\n                  {hh.is_posted == \"1\" ? (\n                    <label className=\"badge badge-success\">YES</label>\n                  ) : (\n                    <label className=\"badge badge-danger\">NO</label>\n                  )}\n                </td>\n                <td>\n                  {hh.is_posted == \"0\" && (\n                    <>\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Post\n                      </button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td>No Data</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport AddNewData from \"./Components/VillageProfile/AddNewData\";\nimport PendingData from \"./Components/VillageProfile/PendingData\";\nimport VillageProfileHome from \"./Components/VillageProfileHome\";\nimport \"./App.css\"\nimport { db } from \"./db/db\";\nimport AllData from \"./Components/VillageProfile/AllData\";\n\nexport default function App() {\n  db.open();\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/village-profile-app/app/add-new\">\n          <AddNewData data={{}} />\n        </Route>\n        <Route path=\"/village-profile-app/app/pending\">\n          <PendingData />\n        </Route>\n        <Route path=\"/village-profile-app/app/all\">\n          <AllData />\n        </Route>\n        <Route path=\"/village-profile-app/app\">\n          <VillageProfileHome />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/village-profile-app\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}